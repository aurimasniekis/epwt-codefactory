<?php

namespace EPWT\CodeFactory;

/**
 * Class TokensMap
 * @package EPWT\CodeFactory
 * @author Aurimas Niekis <aurimas.niekis@gmail.com>
 */
class TokensMap
{
    public static $map = [
        T_ABSTRACT => 'EPWT\\CodeFactory\\Token\\AbstractToken',
        T_AND_EQUAL => 'EPWT\\CodeFactory\\Token\\AndEqualToken',
        T_ARRAY => 'EPWT\\CodeFactory\\Token\\ArrayToken',
        T_ARRAY_CAST => 'EPWT\\CodeFactory\\Token\\ArrayCastToken',
        T_AS => 'EPWT\\CodeFactory\\Token\\AsToken',
        T_BAD_CHARACTER => 'EPWT\\CodeFactory\\Token\\BadCharacterToken',
        T_BOOLEAN_AND => 'EPWT\\CodeFactory\\Token\\BooleanAndToken',
        T_BOOLEAN_OR => 'EPWT\\CodeFactory\\Token\\BooleanOrToken',
        T_BOOL_CAST => 'EPWT\\CodeFactory\\Token\\BoolCastToken',
        T_BREAK => 'EPWT\\CodeFactory\\Token\\BreakToken',
        T_CALLABLE => 'EPWT\\CodeFactory\\Token\\CallableToken',
        T_CASE => 'EPWT\\CodeFactory\\Token\\CaseToken',
        T_CATCH => 'EPWT\\CodeFactory\\Token\\CatchToken',
        T_CHARACTER => 'EPWT\\CodeFactory\\Token\\CharacterToken',
        T_CLASS => 'EPWT\\CodeFactory\\Token\\ClassToken',
        T_CLASS_C => 'EPWT\\CodeFactory\\Token\\ClassCToken',
        T_CLONE => 'EPWT\\CodeFactory\\Token\\CloneToken',
        T_CLOSE_TAG => 'EPWT\\CodeFactory\\Token\\CloseTagToken',
        T_COMMENT => 'EPWT\\CodeFactory\\Token\\CommentToken',
        T_CONCAT_EQUAL => 'EPWT\\CodeFactory\\Token\\ConcatEqualToken',
        T_CONST => 'EPWT\\CodeFactory\\Token\\ConstToken',
        T_CONSTANT_ENCAPSED_STRING => 'EPWT\\CodeFactory\\Token\\ConstantEncapsedStringToken',
        T_CONTINUE => 'EPWT\\CodeFactory\\Token\\ContinueToken',
        T_CURLY_OPEN => 'EPWT\\CodeFactory\\Token\\CurlyOpenToken',
        T_DEC => 'EPWT\\CodeFactory\\Token\\DecToken',
        T_DECLARE => 'EPWT\\CodeFactory\\Token\\DeclareToken',
        T_DEFAULT => 'EPWT\\CodeFactory\\Token\\DefaultToken',
        T_DIR => 'EPWT\\CodeFactory\\Token\\DirToken',
        T_DIV_EQUAL => 'EPWT\\CodeFactory\\Token\\DivEqualToken',
        T_DNUMBER => 'EPWT\\CodeFactory\\Token\\DnumberToken',
        T_DOC_COMMENT => 'EPWT\\CodeFactory\\Token\\DocCommentToken',
        T_DO => 'EPWT\\CodeFactory\\Token\\DoToken',
        T_DOLLAR_OPEN_CURLY_BRACES => 'EPWT\\CodeFactory\\Token\\DollarOpenCurlyBracesToken',
        T_DOUBLE_ARROW => 'EPWT\\CodeFactory\\Token\\DoubleArrowToken',
        T_DOUBLE_CAST => 'EPWT\\CodeFactory\\Token\\DoubleCastToken',
        T_DOUBLE_COLON => 'EPWT\\CodeFactory\\Token\\DoubleColonToken',
        T_ECHO => 'EPWT\\CodeFactory\\Token\\EchoToken',
        T_ELLIPSIS => 'EPWT\\CodeFactory\\Token\\EllipsisToken',
        T_ELSE => 'EPWT\\CodeFactory\\Token\\ElseToken',
        T_ELSEIF => 'EPWT\\CodeFactory\\Token\\ElseIfToken',
        T_EMPTY => 'EPWT\\CodeFactory\\Token\\EmptyToken',
        T_ENCAPSED_AND_WHITESPACE => 'EPWT\\CodeFactory\\Token\\EncapsedAndWhitespaceToken',
        T_ENDDECLARE => 'EPWT\\CodeFactory\\Token\\EndDeclareToken',
        T_ENDFOR => 'EPWT\\CodeFactory\\Token\\EndForToken',
        T_ENDFOREACH => 'EPWT\\CodeFactory\\Token\\EndForeachToken',
        T_ENDIF => 'EPWT\\CodeFactory\\Token\\EndIfToken',
        T_ENDSWITCH => 'EPWT\\CodeFactory\\Token\\EndSwitchToken',
        T_ENDWHILE => 'EPWT\\CodeFactory\\Token\\EndWhileToken',
        T_END_HEREDOC => 'EPWT\\CodeFactory\\Token\\EndHereDocToken',
        T_EVAL => 'EPWT\\CodeFactory\\Token\\EvalToken',
        T_EXIT => 'EPWT\\CodeFactory\\Token\\ExitToken',
        T_EXTENDS => 'EPWT\\CodeFactory\\Token\\ExtendsToken',
        T_FILE => 'EPWT\\CodeFactory\\Token\\FileToken',
        T_FINAL => 'EPWT\\CodeFactory\\Token\\FinalToken',
        T_FINALLY => 'EPWT\\CodeFactory\\Token\\FinallyToken',
        T_FOR => 'EPWT\\CodeFactory\\Token\\ForToken',
        T_FOREACH => 'EPWT\\CodeFactory\\Token\\ForeachToken',
        T_FUNCTION => 'EPWT\\CodeFactory\\Token\\FunctionToken',
        T_FUNC_C => 'EPWT\\CodeFactory\\Token\\FuncCToken',
        T_GLOBAL => 'EPWT\\CodeFactory\\Token\\GlobalToken',
        T_GOTO => 'EPWT\\CodeFactory\\Token\\GotoToken',
        T_HALT_COMPILER => 'EPWT\\CodeFactory\\Token\\HaltCompilerToken',
        T_IF => 'EPWT\\CodeFactory\\Token\\IfToken',
        T_IMPLEMENTS => 'EPWT\\CodeFactory\\Token\\ImplementsToken',
        T_INC => 'EPWT\\CodeFactory\\Token\\IncToken',
        T_INCLUDE => 'EPWT\\CodeFactory\\Token\\IncludeToken',
        T_INCLUDE_ONCE => 'EPWT\\CodeFactory\\Token\\IncludeOnceToken',
        T_INLINE_HTML => 'EPWT\\CodeFactory\\Token\\InlineHtmlToken',
        T_INSTANCEOF => 'EPWT\\CodeFactory\\Token\\InstanceofToken',
        T_INSTEADOF => 'EPWT\\CodeFactory\\Token\\InsteadOfToken',
        T_INT_CAST => 'EPWT\\CodeFactory\\Token\\IntCastToken',
        T_INTERFACE => 'EPWT\\CodeFactory\\Token\\InterfaceToken',
        T_ISSET => 'EPWT\\CodeFactory\\Token\\IssetToken',
        T_IS_EQUAL => 'EPWT\\CodeFactory\\Token\\IsEqualToken',
        T_IS_GREATER_OR_EQUAL => 'EPWT\\CodeFactory\\Token\\IsGreaterOrEqualToken',
        T_IS_IDENTICAL => 'EPWT\\CodeFactory\\Token\\IsIdenticalToken',
        T_IS_NOT_EQUAL => 'EPWT\\CodeFactory\\Token\\IsNotEqualToken',
        T_IS_NOT_IDENTICAL => 'EPWT\\CodeFactory\\Token\\IsNotIdenticalToken',
        T_IS_SMALLER_OR_EQUAL => 'EPWT\\CodeFactory\\Token\\IsSmallerOrEqualToken',
        //T_SPACESHIP => 'EPWT\\CodeFactory\\Token\\SpaceshipToken',
        T_LINE => 'EPWT\\CodeFactory\\Token\\LineToken',
        T_LIST => 'EPWT\\CodeFactory\\Token\\ListToken',
        T_LNUMBER => 'EPWT\\CodeFactory\\Token\\LnumberToken',
        T_LOGICAL_AND => 'EPWT\\CodeFactory\\Token\\LogicalAndToken',
        T_LOGICAL_OR => 'EPWT\\CodeFactory\\Token\\LogicalOrToken',
        T_LOGICAL_XOR => 'EPWT\\CodeFactory\\Token\\LogicalXorToken',
        T_METHOD_C => 'EPWT\\CodeFactory\\Token\\MethodCToken',
        T_MINUS_EQUAL => 'EPWT\\CodeFactory\\Token\\MinusEqualToken',
        T_MOD_EQUAL => 'EPWT\\CodeFactory\\Token\\ModEqualToken',
        T_MUL_EQUAL => 'EPWT\\CodeFactory\\Token\\MulEqualToken',
        T_NAMESPACE => 'EPWT\\CodeFactory\\Token\\NamespaceToken',
        T_NS_C => 'EPWT\\CodeFactory\\Token\\NsCToken',
        T_NS_SEPARATOR => 'EPWT\\CodeFactory\\Token\\NsSeparatorToken',
        T_NEW => 'EPWT\\CodeFactory\\Token\\NewToken',
        T_NUM_STRING => 'EPWT\\CodeFactory\\Token\\NumStringToken',
        T_OBJECT_CAST => 'EPWT\\CodeFactory\\Token\\ObjectCastToken',
        T_OBJECT_OPERATOR => 'EPWT\\CodeFactory\\Token\\ObjectOperatorToken',
        T_OPEN_TAG => 'EPWT\\CodeFactory\\Token\\OpenTagToken',
        T_OPEN_TAG_WITH_ECHO => 'EPWT\\CodeFactory\\Token\\OpenTagWithEchoToken',
        T_OR_EQUAL => 'EPWT\\CodeFactory\\Token\\OrEqualToken',
        T_PAAMAYIM_NEKUDOTAYIM => 'EPWT\\CodeFactory\\Token\\PaamayimNekudotayimToken',
        T_PLUS_EQUAL => 'EPWT\\CodeFactory\\Token\\PlusEqualToken',
        T_POW => 'EPWT\\CodeFactory\\Token\\PowToken',
        T_POW_EQUAL => 'EPWT\\CodeFactory\\Token\\PowEqualToken',
        T_PRINT => 'EPWT\\CodeFactory\\Token\\PrintToken',
        T_PRIVATE => 'EPWT\\CodeFactory\\Token\\PrivateToken',
        T_PUBLIC => 'EPWT\\CodeFactory\\Token\\PublicToken',
        T_PROTECTED => 'EPWT\\CodeFactory\\Token\\ProtectedToken',
        T_REQUIRE => 'EPWT\\CodeFactory\\Token\\RequireToken',
        T_REQUIRE_ONCE => 'EPWT\\CodeFactory\\Token\\RequireOnceToken',
        T_RETURN => 'EPWT\\CodeFactory\\Token\\ReturnToken',
        T_SL => 'EPWT\\CodeFactory\\Token\\SlToken',
        T_SL_EQUAL => 'EPWT\\CodeFactory\\Token\\SlEqualToken',
        T_SR => 'EPWT\\CodeFactory\\Token\\SrToken',
        T_SR_EQUAL => 'EPWT\\CodeFactory\\Token\\SrEqualToken',
        T_START_HEREDOC => 'EPWT\\CodeFactory\\Token\\StartHereDocToken',
        T_STATIC => 'EPWT\\CodeFactory\\Token\\StaticToken',
        T_STRING => 'EPWT\\CodeFactory\\Token\\StringToken',
        T_STRING_CAST => 'EPWT\\CodeFactory\\Token\\StringCastToken',
        T_STRING_VARNAME => 'EPWT\\CodeFactory\\Token\\StringVarnameToken',
        T_SWITCH => 'EPWT\\CodeFactory\\Token\\SwitchToken',
        T_THROW => 'EPWT\\CodeFactory\\Token\\ThrowToken',
        T_TRAIT => 'EPWT\\CodeFactory\\Token\\TraitToken',
        T_TRAIT_C => 'EPWT\\CodeFactory\\Token\\TraitCToken',
        T_TRY => 'EPWT\\CodeFactory\\Token\\TryToken',
        T_UNSET => 'EPWT\\CodeFactory\\Token\\UnsetToken',
        T_UNSET_CAST => 'EPWT\\CodeFactory\\Token\\UnsetCastToken',
        T_USE => 'EPWT\\CodeFactory\\Token\\UseToken',
        T_VAR => 'EPWT\\CodeFactory\\Token\\VarToken',
        T_VARIABLE => 'EPWT\\CodeFactory\\Token\\VariableToken',
        T_WHILE => 'EPWT\\CodeFactory\\Token\\WhileToken',
        T_WHITESPACE => 'EPWT\\CodeFactory\\Token\\WhitespaceToken',
        T_XOR_EQUAL => 'EPWT\\CodeFactory\\Token\\XorEqualToken',
        T_YIELD => 'EPWT\\CodeFactory\\Token\\YieldToken',
        CustomTokens::T_NEW_LINE => 'EPWT\\CodeFactory\\Token\\NewLineToken',
        CustomTokens::T_TAB => 'EPWT\\CodeFactory\\Token\\TabToken',
        CustomTokens::T_LEFT_SQUARE_BRACKET => 'EPWT\\CodeFactory\\Token\\LeftSquareBracketToken',
        CustomTokens::T_RIGHT_SQUARE_BRACKET => 'EPWT\\CodeFactory\\Token\\RightSquareBracketToken',
        CustomTokens::T_EQUALS_SIGN => 'EPWT\\CodeFactory\\Token\\EqualsSignToken',
        CustomTokens::T_SEMICOLON => 'EPWT\\CodeFactory\\Token\\SemicolonToken',
        CustomTokens::T_LEFT_PARENTHESIS => 'EPWT\\CodeFactory\\Token\\LeftParenthesisToken',
        CustomTokens::T_RIGHT_PARENTHESIS => 'EPWT\\CodeFactory\\Token\\RightParenthesisToken',
        CustomTokens::T_RIGHT_CURLY_BRACKET => 'EPWT\\CodeFactory\\Token\\RightCurlyBracketToken',
        CustomTokens::T_LEFT_CURLY_BRACKET => 'EPWT\\CodeFactory\\Token\\LeftCurlyBracketToken',
        CustomTokens::T_COMMA => 'EPWT\\CodeFactory\\Token\\CommaToken',
        CustomTokens::T_HYPHEN => 'EPWT\\CodeFactory\\Token\\HyphenToken',
        CustomTokens::T_EXCLAMATION_MARK => 'EPWT\\CodeFactory\\Token\\ExclamationMarkToken',
        CustomTokens::T_DOT => 'EPWT\\CodeFactory\\Token\\DotToken',
        CustomTokens::T_LESS_THAN => 'EPWT\\CodeFactory\\Token\\LessThanToken',
        CustomTokens::T_GREATER_THAN => 'EPWT\\CodeFactory\\Token\\GreaterThanToken',
        CustomTokens::T_DIE => 'EPWT\\CodeFactory\\Token\\DieToken',
    ];
}
